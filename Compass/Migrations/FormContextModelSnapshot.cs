// <auto-generated />
using System;
using Compass.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Compass.Migrations
{
    [DbContext(typeof(FormContext))]
    partial class FormContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Compass.Entity.Form", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FormUri")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUpdated")
                        .HasColumnType("TEXT");

                    b.HasKey("FormId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Compass.Entity.ICRHeader", b =>
                {
                    b.Property<int>("ICRHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConsiceNoteReportLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("EncoderName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FacilityCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("FormID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MeterialBalanceArea")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodCoveredByReportFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodCoveredByReportTo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportStatus")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUpdated")
                        .HasColumnType("TEXT");

                    b.HasKey("ICRHeaderId");

                    b.ToTable("IcrHeaders");
                });

            modelBuilder.Entity("Compass.Entity.ICRValue", b =>
                {
                    b.Property<int>("ICRValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BurnUp")
                        .HasMaxLength(10)
                        .HasColumnType("REAL");

                    b.Property<string>("ConciseNoteEntry")
                        .HasColumnType("TEXT");

                    b.Property<int>("CorrectionToEntryNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CorrectionToReportNo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfInventoryChange")
                        .HasColumnType("TEXT");

                    b.Property<string>("Element")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntryStatus")
                        .HasColumnType("TEXT");

                    b.Property<int>("ICRHeaderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IsotopeCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("KmpCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("MbaCountryFrom")
                        .HasColumnType("TEXT");

                    b.Property<string>("MbaCountryTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeasurBasis")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeterialDesc")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameOrNumberOfBatch")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberOfItemsInBatch")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShipperBatch")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeOfInventoryChange")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserUpdated")
                        .HasColumnType("TEXT");

                    b.Property<double>("WeightOfElement")
                        .HasMaxLength(16)
                        .HasColumnType("REAL");

                    b.Property<double>("WeightOfFissileIsotopes")
                        .HasMaxLength(16)
                        .HasColumnType("REAL");

                    b.HasKey("ICRValueId");

                    b.ToTable("ICRValues");
                });
#pragma warning restore 612, 618
        }
    }
}
